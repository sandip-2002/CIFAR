# -*- coding: utf-8 -*-
"""CIFAR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cpkd-ReLnjLLsIaj1VhjvR67-jxdJbfx
"""

from tensorflow import keras
(x_train, y_train), (x_test, y_test)=keras.datasets.cifar10.load_data()

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

label ="airplane automobile bird cat deer dog frog horse ship truck"
label = label.split()
label

import random
import matplotlib.pyplot as plt
i = random.randint(0,50000)
plt.imshow(x_train[i],cmap='gray') # Color map
plt.title(label[y_train[i][0]])
plt.show()

import numpy as np
np.unique(y_train, return_counts = True)

np.unique(y_test, return_counts = True)

x_train= x_train/255
 x_test = x_test/255

from tensorflow import keras
from keras import layers
model=keras.Sequential

model=keras.Sequential()

from keras.layers import Flatten
from keras.layers import Dense
model.add(Flatten(input_shape=(32,32,3))) 
model.add(Dense(1500,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

history = model.fit(x_train,y_train,epochs=10,validation_split=0.2)

from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Dropout

cnn = keras.Sequential()
cnn.add(Conv2D(32,(3,3),activation='relu',input_shape=(32,32,3)))
cnn.add(MaxPooling2D())
cnn.add(Dropout(0.3))
cnn.add(Conv2D(64,(3,3),activation='relu',input_shape=(32,32,3)))
cnn.add(MaxPooling2D())
cnn.add(Dropout(0.3))
cnn.add(Conv2D(128,(3,3),activation='relu',input_shape=(32,32,3)))
cnn.add(MaxPooling2D())
cnn.add(Dropout(0.3))
cnn.add(Flatten()) # 784
cnn.add(Dense(50,activation='relu'))
cnn.add(Dropout(0.3))
cnn.add(Dense(10,activation='softmax'))

from keras import optimizers
opt = keras.optimizers.Adam(learning_rate=0.005)
cnn.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])
history = cnn.fit(x_train,y_train,epochs=30,validation_split=0.2)

##CNN

from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Dropout

cnn = keras.Sequential()
cnn.add(Conv2D(32,(3,3),activation='relu',input_shape(32,32,3)))
cnn.add(MaxPooling2D())

